{
  "openapi": "3.0.0",
  "info": {
    "title": "Feedback Management System API",
    "version": "1.0.0",
    "description": "A comprehensive API for managing feedback submissions with activity logging and request tracking",
    "contact": {
      "name": "API Support",
      "email": "support@feedbacksystem.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    },
    {
      "url": "https://api.feedbacksystem.com/api",
      "description": "Production server"
    }
  ],
  "paths": {
    "/feedbacks": {
      "get": {
        "summary": "Get all feedbacks",
        "description": "Retrieve a list of all feedback entries ordered by creation date (newest first)",
        "tags": ["Feedbacks"],
        "responses": {
          "200": {
            "description": "Successfully retrieved feedbacks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Feedback"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of feedbacks",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create new feedback",
        "description": "Create a new feedback entry with validation",
        "tags": ["Feedbacks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Feedback created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Feedback"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/feedbacks/{id}": {
      "get": {
        "summary": "Get feedback by ID",
        "description": "Retrieve a specific feedback entry by its ID",
        "tags": ["Feedbacks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the feedback",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved feedback",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Feedback"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "summary": "Update feedback",
        "description": "Update an existing feedback entry with validation",
        "tags": ["Feedbacks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the feedback to update",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Feedback updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Feedback"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete feedback",
        "description": "Delete a specific feedback entry by its ID",
        "tags": ["Feedbacks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the feedback to delete",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Feedback deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/logs/activities": {
      "get": {
        "summary": "Get activity logs",
        "description": "Retrieve the latest 100 activity logs ordered by creation date (newest first)",
        "tags": ["Logs"],
        "responses": {
          "200": {
            "description": "Successfully retrieved activity logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ActivityLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/logs/api-requests": {
      "get": {
        "summary": "Get API request logs",
        "description": "Retrieve the latest 100 API request logs with performance metrics ordered by creation date (newest first)",
        "tags": ["Logs"],
        "responses": {
          "200": {
            "description": "Successfully retrieved API request logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Check if the API is running and healthy",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Feedback Management API is running"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:30:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Feedback": {
        "type": "object",
        "required": ["title", "platform", "module", "description"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the feedback",
            "example": 1
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "description": "Title of the feedback",
            "example": "Login Issue"
          },
          "platform": {
            "type": "string",
            "maxLength": 100,
            "description": "Platform where the issue occurred",
            "enum": ["Web", "Mobile", "Desktop", "API"],
            "example": "Web"
          },
          "module": {
            "type": "string",
            "maxLength": 100,
            "description": "Module or feature related to the feedback",
            "enum": ["Authentication", "Dashboard", "Reports", "Settings", "Notifications", "User Management"],
            "example": "Authentication"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the feedback",
            "example": "Users are unable to login with correct credentials"
          },
          "attachments": {
            "type": "string",
            "maxLength": 500,
            "description": "Comma-separated list of attachment file names",
            "example": "screenshot1.png, error_log.txt"
          },
          "tags": {
            "type": "string",
            "maxLength": 300,
            "description": "Comma-separated list of tags",
            "example": "bug, critical, login"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the feedback was created",
            "example": "2024-01-15T10:30:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the feedback was last updated",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "FeedbackInput": {
        "type": "object",
        "required": ["title", "platform", "module", "description"],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "description": "Title of the feedback",
            "example": "Login Issue"
          },
          "platform": {
            "type": "string",
            "maxLength": 100,
            "description": "Platform where the issue occurred",
            "enum": ["Web", "Mobile", "Desktop", "API"],
            "example": "Web"
          },
          "module": {
            "type": "string",
            "maxLength": 100,
            "description": "Module or feature related to the feedback",
            "enum": ["Authentication", "Dashboard", "Reports", "Settings", "Notifications", "User Management"],
            "example": "Authentication"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the feedback",
            "example": "Users are unable to login with correct credentials"
          },
          "attachments": {
            "type": "string",
            "maxLength": 500,
            "description": "Comma-separated list of attachment file names",
            "example": "screenshot1.png, error_log.txt"
          },
          "tags": {
            "type": "string",
            "maxLength": 300,
            "description": "Comma-separated list of tags",
            "example": "bug, critical, login"
          }
        }
      },
      "ActivityLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the activity log",
            "example": 1
          },
          "action": {
            "type": "string",
            "maxLength": 50,
            "description": "Type of action performed",
            "enum": ["CREATE", "UPDATE", "DELETE"],
            "example": "CREATE"
          },
          "table_name": {
            "type": "string",
            "maxLength": 50,
            "description": "Name of the table affected",
            "example": "feedbacks"
          },
          "record_id": {
            "type": "integer",
            "description": "ID of the affected record",
            "example": 1
          },
          "details": {
            "type": "string",
            "description": "Additional details about the action",
            "example": "Created feedback: Login Issue"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the activity was logged",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "ApiRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the API request log",
            "example": 1
          },
          "method": {
            "type": "string",
            "maxLength": 10,
            "description": "HTTP method used",
            "enum": ["GET", "POST", "PUT", "DELETE"],
            "example": "POST"
          },
          "endpoint": {
            "type": "string",
            "maxLength": 255,
            "description": "API endpoint that was called",
            "example": "/api/feedbacks"
          },
          "request_body": {
            "type": "string",
            "description": "JSON string of the request body",
            "example": "{\"title\":\"Login Issue\",\"platform\":\"Web\"}"
          },
          "response_body": {
            "type": "string",
            "description": "JSON string of the response body",
            "example": "{\"success\":true,\"message\":\"Feedback created successfully\"}"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response",
            "example": 201
          },
          "response_time": {
            "type": "integer",
            "description": "Response time in milliseconds",
            "example": 150
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the request was made",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object",
            "description": "Response data (varies by endpoint)"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "An error occurred"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of error messages (for validation errors)",
            "example": ["Title is required", "Platform is required"]
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Validation error"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Title is required", "Platform must be one of: Web, Mobile, Desktop, API"]
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "success": false,
              "message": "Feedback not found"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "success": false,
              "message": "Internal server error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Feedbacks",
      "description": "Feedback management operations"
    },
    {
      "name": "Logs",
      "description": "System logging and monitoring"
    },
    {
      "name": "Health",
      "description": "API health check"
    }
  ]
}
